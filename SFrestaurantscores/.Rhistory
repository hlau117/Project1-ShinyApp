NYC_Jobs=NYC_Jobs %>% rename(low= `Salary Range From`, high= `Salary Range To` )
NYC_Jobs$low=as.numeric(NYC_Jobs$low)
NYC_Jobs=NYC_Jobs %>% filter(is.na(low)!=TRUE)
NYC_Jobs= NYC_Jobs %>%  mutate(low= ifelse(`Salary Frequency`=='Hourly',
yes=low*8*5*52,
no= ifelse(`Salary Frequency`== 'Daily',
yes= low* 5*52,
no=low)),
high=ifelse(`Salary Frequency`=='Hourly',
yes=high*8*5*52,
no= ifelse(`Salary Frequency`== 'Daily',
yes= high* 5*52,
no=high)),
`Salary Frequency`='Annual')
NYC_Jobs=NYC_Jobs %>% group_by(Agency) %>% mutate(mean_high=mean(high), mean_low=mean(low),median_high= median(high),median_low= median(low))
NYC_Jobs %>% ungroup() %>% filter(mean_low==max(mean_low)) %>% distinct(mean_low)
NYC_Jobs %>% ungroup() %>%group_by(`Posting Type`) %>% summarize(range=mean_high-mean_low)
NYC_Jobs %>% ungroup() %>%group_by(`Posting Type`) %>% select(range=mean_high-mean_low)
NYC_Jobs %>% ungroup() %>%group_by(`Posting Type`) %>% select(range=mean_high-mean_low)
NYC_Jobs %>% ungroup() %>%group_by(`Posting Type`) %>% mutate(range=mean_high-mean_low)
NYC_Jobs %>% ungroup() %>%group_by(`Posting Type`) %>% mutate(range=mean_high-mean_low) %>% Select(Agency, `Posting Type`, range)
NYC_Jobs %>% ungroup() %>%group_by(`Posting Type`) %>% mutate(range=mean_high-mean_low) %>% select(Agency, `Posting Type`, range)
NYC_Jobs %>%group_by(`Posting Type`) %>% mutate(range=mean_high-mean_low) %>% select(Agency, `Posting Type`, range)
NYC_Jobs %>% group_by(`Posting Type`) %>% mutate(range=mean_high-mean_low) %>% select(Agency, `Posting Type`, range)
NYC_Jobs %>% group_by(`Posting Type`) %>% mutate(range=mean_high-mean_low) %>% select(c(Agency, `Posting Type`, range))
NYC_Jobs %>% ungroup() %>% group_by(`Posting Type`) %>% mutate(range=mean_high-mean_low) %>% select(c(Agency, `Posting Type`, range))
NYC_Jobs
NYC_Jobs =read_csv("C:/Users/hans/OneDrive/Documents/Data_Science/NYCDSA/Week_2/HW_5-Dplyr/Dplyr_Homework/NYC_Jobs.csv")
NYC_Jobs=NYC_Jobs %>% rename(low= `Salary Range From`, high= `Salary Range To` )
NYC_Jobs$low=as.numeric(NYC_Jobs$low)
NYC_Jobs=NYC_Jobs %>% filter(is.na(low)!=TRUE)
NYC_Jobs= NYC_Jobs %>%  mutate(low= ifelse(`Salary Frequency`=='Hourly',
yes=low*8*5*52,
no= ifelse(`Salary Frequency`== 'Daily',
yes= low* 5*52,
no=low)),
high=ifelse(`Salary Frequency`=='Hourly',
yes=high*8*5*52,
no= ifelse(`Salary Frequency`== 'Daily',
yes= high* 5*52,
no=high)),
`Salary Frequency`='Annual')
NYC_Jobs=NYC_Jobs %>% group_by(Agency) %>% mutate(mean_high=mean(high), mean_low=mean(low),median_high= median(high),median_low= median(low))
NYC_Jobs= NYC_Jobs %>% ungroup()
NYC_Jobs %>% group_by(`Posting Type`) %>% mutate(range=mean_high-mean_low) %>% select(c(Agency, `Posting Type`, range))
NYC_Jobs %>% group_by(`Posting Type`) %>% mutate(range=mean_high-mean_low) %>% select(c(Agency, `Posting Type`, range))
NYC_Jobs
View(NYC_Jobs)
NYC_Jobs =read_csv("C:/Users/hans/OneDrive/Documents/Data_Science/NYCDSA/Week_2/HW_5-Dplyr/Dplyr_Homework/NYC_Jobs.csv")
NYC_Jobs =read_csv("C:/Users/hans/OneDrive/Documents/Data_Science/NYCDSA/Week_2/HW_5-Dplyr/Dplyr_Homework/NYC_Jobs.csv")
NYC_Jobs=NYC_Jobs %>% rename(low= `Salary Range From`, high= `Salary Range To` )
NYC_Jobs$low=as.numeric(NYC_Jobs$low)
NYC_Jobs=NYC_Jobs %>% filter(is.na(low)!=TRUE)
NYC_Jobs= NYC_Jobs %>%  mutate(low= ifelse(`Salary Frequency`=='Hourly',
yes=low*8*5*52,
no= ifelse(`Salary Frequency`== 'Daily',
yes= low* 5*52,
no=low)),
high=ifelse(`Salary Frequency`=='Hourly',
yes=high*8*5*52,
no= ifelse(`Salary Frequency`== 'Daily',
yes= high* 5*52,
no=high)),
`Salary Frequency`='Annual')
NYC_Jobs=NYC_Jobs %>% group_by(Agency) %>% mutate(mean_high=mean(high), mean_low=mean(low),median_high= median(high),median_low= median(low))
NYC_Jobs= NYC_Jobs %>% ungroup()
NYC_Jobs %>% filter(mean_low==max(mean_low)) %>% distinct(mean_low)
NYC_Jobs %>% group_by(`Posting Type`) %>% mutate(range=mean_high-mean_low) %>% select(c(Agency, `Posting Type`, range))
NYC_Jobs %>% group_by(`Posting Type`)
NYC_Jobs %>% group_by(`Posting Type`) %>% transmute(`Posting Type`, range= mean_high-mean_low)
NYC_Jobs %>% group_by(`Posting Type`) %>% transmute( range= mean_high-mean_low)
NYC_Jobs %>% group_by(Posting Type) %>% transmute( range= mean_high-mean_low)
NYC_Jobs %>% group_by(`Posting Type`) %>% transmute( range= mean_high-mean_low)
NYC_Jobs %>% group_by(`Posting Type`)
NYC_Jobs %>% transmute( range= mean_high-mean_low)
NYC_Jobs %>% transmute( range= mean_high-mean_low) %>% group_by(`Posting Type`)
NYC_Jobs %>% group_by(`Posting Type`) %>% transmute( range= mean_high-mean_low)
NYC_Jobs %>% group_by(`Posting Type`) %>% mutate( range= mean_high-mean_low)
NYC_Jobs %>% group_by(`Posting Type`) %>% mutate( range= mean_high-mean_low) %>% select(range)
View(NYC_Jobs)
NYC_Jobs %>% group_by(`Posting Type`) %>% mutate( range= mean_high-mean_low)
NYC_Jobs %>% group_by(`Posting Type`) %>% mutate( range= mean_high-mean_low) %>% distinct()
NYC_Jobs %>% group_by(`Posting Type`) %>% mutate( range= mean_high-mean_low) %>% distinct(Agency)
NYC_Jobs %>% arrange(desc(level))
NYC_Jobs %>% arrange(desc(Level))
NYC_Jobs %>% arrange(desc(Level)) %>%group_by(Level)
NYC_Jobs %>% arrange(desc(Level)) %>%group_by(Level) %>% summarize(mean_high-mean_low)
NYC_Jobs %>% arrange(desc(Level)) %>%group_by(Level) %>% mutate(mean_high-mean_low)
(mean_high-mean_low)
NYC_Jobs %>% arrange(desc(Level)) %>%group_by(Level) %>% transmute
NYC_Jobs %>% arrange(desc(Level)) %>%group_by(Level) %>% transmute(mean_high-mean_low)
NYC_Jobs %>% arrange(desc(Level)) %>%group_by(Level) %>% transmute(mean_high-mean_low) %>% distinct()
NYC_Jobs %>% arrange(desc(Level)) %>%group_by(Level) %>% transmute(range=mean_high-mean_low) %>% distinct()
NYC_Jobs %>% group_by(`Posting Type`) %>% transmute(range=mean_high-mean_low) %>% distinct(Agency)
NYC_Jobs %>% group_by(`Posting Type`) %>% mutate(range=mean_high-mean_low) %>% distinct(Agency)
is.na(NYC_Jobs$`Posting Type`)
any(is.na(NYC_Jobs$`Posting Type`))
NYC_Jobs %>% group_by(`Posting Type`) %>% transmute(range=mean_high-mean_low)
NYC_Jobs %>% transmute(`Posting Type`= distinct(`Posting Type`),range=mean_high-mean_low)
NYC_Jobs %>% transmute(`Posting Type`= `Posting Type`,range=mean_high-mean_low)
NYC_Jobs %>% transmute(`Posting Type`= `Posting Type`,range=mean_high-mean_low) %>% distinct()
NYC_Jobs %>% transmute(Agency=Agency,`Posting Type`= `Posting Type`,range=mean_high-mean_low) %>% distinct()
NYC_Jobs %>% group_by(`Civil Service Title`) %>% transmute(range=mean_high-mean_low)
NYC_Jobs %>%transmute(`Civil Service Title`= `Civil Service Title`,range=mean_high-mean_low) %>% group_by(`Civil Service Title`)
NYC_Jobs %>%transmute(`Civil Service Title`= `Civil Service Title`,range=mean_high-mean_low) %>% group_by(`Civil Service Title`) %>% distinct()
NYC_Jobs %>%transmute(`Civil Service Title`= `Civil Service Title`,range=mean_high-mean_low) %>% group_by(`Civil Service Title`) %>% distinct() %>% filter(range==max(range))
NYC_Jobs %>%transmute(`Civil Service Title`= `Civil Service Title`,range=mean_high-mean_low) %>% group_by(`Civil Service Title`) %>% distinct() %>% ungroup() %>% filter(range==max(range))
NYC_Jobs$`# Of Positions`
class(NYC_Jobs$`# Of Positions`)
NYC_Jobs %>% transmute(Agency=Agency,Potential_Expenses= `# Of Positions`* (mean_high-mean_low))
NYC_Jobs %>% transmute(Agency=Agency,Potential_Expenses= `# Of Positions`* (mean_high-mean_low)) %>% distinct()
NYC_Jobs %>% transmute(Agency=Agency,Potential_Expenses= `# Of Positions`* (mean_high-mean_low)) %>% group_by(Agency)
NYC_Jobs %>% transmute(Agency=Agency,Potential_Expenses= `# Of Positions`* (mean_high-mean_low)) %>% group_by(Agency) %>% distinct()
NYC_Jobs %>% transmute(Agency=Agency,Potential_Expenses= `# Of Positions`* (mean_high-mean_low)) %>% distinct()
Champions <- read_csv("C:/Users/hans/OneDrive/Documents/Data_Science/NYCDSA/Week_2/HW_5-Dplyr/Dplyr_Homework/Champions.csv")
View(Champions)
View(Champions)
Home_Team_Win=Champions %>% filter(HomeGoal>AwayGoal)
filter(Champions, HomeGoal>1)
colnames(Champions)
Champions$HomeGoal
Home_Team_Win=Champions %>% filter(HomeGoal>1)
data(Champions)
Home_Team_Win=Champions %>% filter(HomeGoal>1)
library(readr)
Champions <- read_csv("C:/Users/hans/OneDrive/Documents/Data_Science/NYCDSA/Week_2/HW_5-Dplyr/Dplyr_Homework/Champions.csv")
View(Champions)
Home_Team_Win=Champions %>% filter(HomeGoal>1)
Champions %>% filter(HomeGoal>1)
filter(Champions,HomeGoal>1)
CHampions
Champions
Champions %>% filter(HomeGoal > 1)
Champions %>% filter(.,HomeGoal > 1)
View(Champions)
View(Champions)
Champions %>% filter(HomeGoal > 1)
Champions <- read_csv("C:/Users/hans/OneDrive/Documents/Data_Science/NYCDSA/Week_2/HW_5-Dplyr/Dplyr_Homework/Champions.csv")
Champions <- read.csv("C:/Users/hans/OneDrive/Documents/Data_Science/NYCDSA/Week_2/HW_5-Dplyr/Dplyr_Homework/Champions.csv")
Champions %>% filter(HomeGoal > 1)
library(readr)
Champions <- read_csv("C:/Users/hans/OneDrive/Documents/Data_Science/NYCDSA/Week_2/HW_5-Dplyr/Dplyr_Homework/Champions.csv")
Champions %>% filter(HomeGoal > 1)
library(readr)
Champions <- read_csv("C:/Users/hans/OneDrive/Documents/Data_Science/NYCDSA/Week_2/HW_5-Dplyr/Dplyr_Homework/Champions.csv")
Champions %>% filter(HomeGoal > 1)
library(readr)
Champions <- read.csv("C:/Users/hans/OneDrive/Documents/Data_Science/NYCDSA/Week_2/HW_5-Dplyr/Dplyr_Homework/Champions.csv")
Champions %>% filter(HomeGoal > 1)
Champions <- read_csv("C:/Users/hans/OneDrive/Documents/Data_Science/NYCDSA/Week_2/HW_5-Dplyr/Dplyr_Homework/Champions.csv")
Champions %>% filter(HomeGoal > 1)
?read_csv
Champions <- read.csv("C:/Users/hans/OneDrive/Documents/Data_Science/NYCDSA/Week_2/HW_5-Dplyr/Dplyr_Homework/Champions.csv")
Champions %>% filter(HomeGoal > AwayGoal)
Home_Team_Wins=Champions %>% filter(HomeGoal > AwayGoal)
Champions%>% filter(HomeTeam=="Barcelona" | HomeTeam=="Real Madrid")
Home_Team=Champions %>% select(starts_with('Home'))
View(Home_Team)
Home_Away= Champions %>% select(contains('Team','Goal','Corner'))
Home_Away= Champions %>% select(contains(c('Team','Goal','Corner'))
Home_Away= Champions %>% select(contains(c('Team','Goal','Corner')))
Home_Away= Champions %>% select(contains('Team'),contains('Goal'),contains('Corner'))
View(Home_Away)
Home_Away %>% arrange(desc(HomeGoal)) %>% select(*)
Home_Away %>% arrange(desc(HomeGoal)) %>% select()
Home_Away %>% arrange(desc(HomeGoal)) %>% select(,)
Home_Away %>% arrange(desc(HomeGoal)) %>% print()
View(Home_Team)
results=Home_Team %>% group_by(HomeTeam) %>% summarise(avg_HomeGoal=mean(HomeGoal), possesion_rate=mean(HomePossession), num_yellow_cards=mean(HomeYellow))
View(results)
NYC_Jobs =read_csv("C:/Users/hans/OneDrive/Documents/Data_Science/NYCDSA/Week_2/HW_5-Dplyr/Dplyr_Homework/NYC_Jobs.csv")
NYC_Jobs=NYC_Jobs %>% rename(low= `Salary Range From`, high= `Salary Range To` )
NYC_Jobs$low=as.numeric(NYC_Jobs$low)
NYC_Jobs=NYC_Jobs %>% filter(is.na(low)!=TRUE)
NYC_Jobs= NYC_Jobs %>%  mutate(low= ifelse(`Salary Frequency`=='Hourly',
yes=low*8*5*52,
no= ifelse(`Salary Frequency`== 'Daily',
yes= low* 5*52,
no=low)),
high=ifelse(`Salary Frequency`=='Hourly',
yes=high*8*5*52,
no= ifelse(`Salary Frequency`== 'Daily',
yes= high* 5*52,
no=high)),
`Salary Frequency`='Annual')
NYC_Jobs %>% group_by(Agency) %>% mutate(mean_high=mean(high), mean_low=mean(low),median_high= median(high),median_low= median(low))
View(NYC_Jobs)
NYC_Jobs= NYC_Jobs %>% mutate(mean_high=mean(high), mean_low=mean(low),median_high= median(high),median_low= median(low))
View(NYC_Jobs)
NYC_Jobs =read_csv("C:/Users/hans/OneDrive/Documents/Data_Science/NYCDSA/Week_2/HW_5-Dplyr/Dplyr_Homework/NYC_Jobs.csv")
NYC_Jobs=NYC_Jobs %>% rename(low= `Salary Range From`, high= `Salary Range To` )
NYC_Jobs$low=as.numeric(NYC_Jobs$low)
NYC_Jobs=NYC_Jobs %>% filter(is.na(low)!=TRUE)
NYC_Jobs= NYC_Jobs %>%  mutate(low= ifelse(`Salary Frequency`=='Hourly',
yes=low*8*5*52,
no= ifelse(`Salary Frequency`== 'Daily',
yes= low* 5*52,
no=low)),
high=ifelse(`Salary Frequency`=='Hourly',
yes=high*8*5*52,
no= ifelse(`Salary Frequency`== 'Daily',
yes= high* 5*52,
no=high)),
`Salary Frequency`='Annual')
NYC_Jobs %>% group_by(Agency) %>% mutate(mean_high=mean(high), mean_low=mean(low),median_high= median(high),median_low= median(low))
NYC_Jobs %>% filter(mean_low==max(mean_low)) %>% distinct(mean_low)
NYC_Jobs %>% group_by(Agency) %>% mutate(mean_high=mean(high), mean_low=mean(low),median_high= median(high),median_low= median(low)) filter(mean_low==max(mean_low)) %>% distinct(mean_low)
NYC_Jobs %>% group_by(Agency) %>% mutate(mean_high=mean(high), mean_low=mean(low),median_high= median(high),median_low= median(low)) %>% filter(mean_low==max(mean_low)) %>% distinct(mean_low)
NYC_Jobs %>% group_by(Agency) %>% mutate(mean_high=mean(high), mean_low=mean(low),median_high= median(high),median_low= median(low)) %>% ungroup() %>% filter(mean_low==max(mean_low)) %>% distinct(mean_low)
NYC_Jobs %>% transmute(Agency=Agency,`Posting Type`= `Posting Type`,range=high-low, avg_salary_range= mean(high)-mean(low)) %>% distinct()
NYC_Jobs %>% arrange(desc(Level)) %>%group_by(Level) %>% transmute(range=mean(high)-mean(low)) %>% distinct()
NYC_Jobs %>% transmute(Agency=Agency,Potential_Expenses= `# Of Positions`* (high-low)) %>% distinct()
NYC_Jobs %>%transmute(`Civil Service Title`= `Civil Service Title`,range=high-low) %>% group_by(`Civil Service Title`) %>% distinct() %>% ungroup() %>% filter(range==max(range))
Champions%>% unite(HomeGoal,AwayGoal, sep='')
library(tidyr)
install.packages("tidyr")
library(tidyr)
Champions%>% unite(HomeGoal,AwayGoal, sep='')
Champions%>% unite("HomeGoal:AwayGoal",HomeGoal,AwayGoal, sep='')
Champions%>% unite("HomeGoal:AwayGoal",HomeGoal,AwayGoal, sep='')%>% count(HomeGoal:AwayGoal)
Champions%>% unite("HomeGoal:AwayGoal",HomeGoal,AwayGoal, sep='')%>% count(`HomeGoal:AwayGoal`)
Champions%>% unite("HomeGoal:AwayGoal",HomeGoal,AwayGoal, sep='')%>% count(counts=`HomeGoal:AwayGoal`)
Champions%>% unite("HomeGoal:AwayGoal",HomeGoal,AwayGoal, sep='')%>% count(`HomeGoal:AwayGoal`)
Champions%>% unite("HomeGoal:AwayGoal",HomeGoal,AwayGoal, sep=':')%>% count(`HomeGoal:AwayGoal`)
counts=Champions%>% unite("HomeGoal:AwayGoal",HomeGoal,AwayGoal, sep=':')%>% count(`HomeGoal:AwayGoal`)
View(counts)
counts=Champions%>% unite("HomeGoal:AwayGoal",HomeGoal,AwayGoal, sep=':')%>% count(`HomeGoal:AwayGoal`,freq)
counts=Champions%>% unite("HomeGoal:AwayGoal",HomeGoal,AwayGoal, sep=':')%>% count(`HomeGoal:AwayGoal`)
vec=c('1:2')
grep("2:1",vec)
grep('a',vec)
grep('a','ab')
grep('a','ba')
grep('a','cd')
vec[2]="2:1"
vec[2].sort()
sort(vec[2])
sort(vec[1])
paste(sort(unlist(strsplit(vec))))
paste(sort(unlist(strsplit(vec, ""))))
sort(unlist(strsplit(vec, ""))))
sort(unlist(strsplit(vec, "")))
paste(sort(unlist(strsplit(vec, ""))), collapse="")
paste(sort(unlist(strsplit(vec[1], ""))), collapse="")
paste(sort(unlist(strsplit(vec[2], ""))), collapse="")
counts_new=c()
goals <- champ %>% select(HomeGoal, AwayGoal)
goals <- Champions %>% select(HomeGoal, AwayGoal)
goals$goals_max <- apply(goals, 1, max)
goals$goals_min <- apply(goals, 1, min)
View(goals)
Champions %>%transmute(low_score = pmin(HomeGoal, AwayGoal), high_score = pmax(HomeGoal, AwayGoal))%>%
transmute(score = paste(high_score, low_score, sep=":")) %>%
group_by(score) %>%
summarise(count = n()) %>%
arrange(-count) %>%
head(5)
Champions %>%transmute(low_score = pmin(HomeGoal, AwayGoal), high_score = pmax(HomeGoal, AwayGoal))
Champions %>%transmute(low_score = pmin(HomeGoal, AwayGoal), high_score = pmax(HomeGoal, AwayGoal))%>% transmute(score = paste(high_score, low_score, sep=":"))
counts=Champions%>% transmute(low=pmin(HomeGoal, AwayGoal), high= pmax(HomeGoal, AwayGoal)) %>% unite("HomeGoal:AwayGoal",HomeGoal,AwayGoal, sep=':')%>% count(`HomeGoal:AwayGoal`)
counts=Champions%>% transmute(low=pmin(HomeGoal, AwayGoal), high= pmax(HomeGoal, AwayGoal)) %>% unite("HomeGoal:AwayGoal",HomeGoal,AwayGoal, sep=':')%>% count(`HomeGoal:AwayGoal`)
Champions <- read.csv("C:/Users/hans/OneDrive/Documents/Data_Science/NYCDSA/Week_2/HW_5-Dplyr/Dplyr_Homework/Champions.csv")
counts=Champions%>% transmute(low=pmin(HomeGoal, AwayGoal), high= pmax(HomeGoal, AwayGoal)) %>% unite("HomeGoal:AwayGoal",HomeGoal,AwayGoal, sep=':')%>% count(`HomeGoal:AwayGoal`)
View(Champions)
Champions$HomeGoal
counts=Champions %>% transmute(low=pmin(HomeGoal, AwayGoal), high= pmax(HomeGoal, AwayGoal)) %>% unite("HomeGoal:AwayGoal",HomeGoal,AwayGoal, sep=':')
library(tidyr)
counts=Champions %>% transmute(low=pmin(HomeGoal, AwayGoal), high= pmax(HomeGoal, AwayGoal)) %>% unite("HomeGoal:AwayGoal",HomeGoal,AwayGoal, sep=':')
counts=Champions %>% transmute(low=pmin(HomeGoal, AwayGoal), high= pmax(HomeGoal, AwayGoal))
View(counts)
counts=Champions %>% mutate(low=pmin(HomeGoal, AwayGoal), high= pmax(HomeGoal, AwayGoal)) %>% transmute(`HomeGoal:AwayGoal`= paste(high,low,sep=":"))
View(counts)
counts=Champions %>% mutate(low=pmin(HomeGoal, AwayGoal), high= pmax(HomeGoal, AwayGoal)) %>% transmute(`HomeGoal:AwayGoal`= paste(high,low,sep=":")) %>% counts()
counts=Champions %>% mutate(low=pmin(HomeGoal, AwayGoal), high= pmax(HomeGoal, AwayGoal)) %>% transmute(`HomeGoal:AwayGoal`= paste(high,low,sep=":")) %>% count()
View(counts)
counts=Champions %>% mutate(low=pmin(HomeGoal, AwayGoal), high= pmax(HomeGoal, AwayGoal)) %>% transmute(`HomeGoal:AwayGoal`= paste(high,low,sep=":")) %>% count(``HomeGoal:AwayGoal`)
counts=Champions %>% mutate(low=pmin(HomeGoal, AwayGoal), high= pmax(HomeGoal, AwayGoal)) %>% transmute(`HomeGoal:AwayGoal`= paste(high,low,sep=":")) %>% count(`HomeGoal:AwayGoal`)
View(counts)
counts=Champions %>% mutate(low=pmin(HomeGoal, AwayGoal), high= pmax(HomeGoal, AwayGoal)) %>% transmute(`HomeGoal:AwayGoal`= paste(high,low,sep=":")) %>% group_by(`HomeGoal:AwayGoal`) %>%   count(`HomeGoal:AwayGoal`) %
counts=Champions %>% mutate(low=pmin(HomeGoal, AwayGoal), high= pmax(HomeGoal, AwayGoal)) %>% transmute(`HomeGoal:AwayGoal`= paste(high,low,sep=":")) %>% group_by(`HomeGoal:AwayGoal`) %>%   count(`HomeGoal:AwayGoal`)
View(counts)
counts=Champions %>% mutate(low=pmin(HomeGoal, AwayGoal), high= pmax(HomeGoal, AwayGoal)) %>% transmute(`HomeGoal:AwayGoal`= paste(high,low,sep=":")) %>%  count(`HomeGoal:AwayGoal`) %>% arrange(desc(`HomeGoal:AwayGoal) %>% top(5)
Champions %>%transmute(low_score = pmin(HomeGoal, AwayGoal), high_score = pmax(HomeGoal, AwayGoal))%>% transmute(score = paste(high_score, low_score, sep=":"))
%>%
group_by(score) %>%
summarise(count = n()) %>%
arrange(-count) %>%
head(5)
counts=Champions %>% mutate(low=pmin(HomeGoal, AwayGoal), high= pmax(HomeGoal, AwayGoal)) %>% transmute(`HomeGoal:AwayGoal`= paste(high,low,sep=":")) %>%  count(`HomeGoal:AwayGoal`) %>% arrange(desc(`HomeGoal:AwayGoal)) %>% top(5)
counts=Champions %>% mutate(low=pmin(HomeGoal, AwayGoal), high= pmax(HomeGoal, AwayGoal)) %>% transmute(`HomeGoal:AwayGoal`= paste(high,low,sep=":")) %>%  count(`HomeGoal:AwayGoal`) %>% arrange(desc(`HomeGoal:AwayGoal`)) %>% top(5)
counts=Champions %>% mutate(low=pmin(HomeGoal, AwayGoal), high= pmax(HomeGoal, AwayGoal)) %>% transmute(`HomeGoal:AwayGoal`= paste(high,low,sep=":")) %>%  count(`HomeGoal:AwayGoal`) %>% arrange(desc(`HomeGoal:AwayGoal`)) %>% top_n(5)
View(counts)
counts=Champions %>% mutate(low=pmin(HomeGoal, AwayGoal), high= pmax(HomeGoal, AwayGoal)) %>% transmute(`HomeGoal:AwayGoal`= paste(high,low,sep=":")) %>%  count(`HomeGoal:AwayGoal`) %>% arrange(desc(`HomeGoal:AwayGoal`)) %>% head(5)
View(counts)
Champions <- read.csv("C:/Users/hans/OneDrive/Documents/Data_Science/NYCDSA/Week_2/HW_5-Dplyr/Dplyr_Homework/Champions.csv")
library(tidyr)
counts=Champions %>% mutate(low=pmin(HomeGoal, AwayGoal), high= pmax(HomeGoal, AwayGoal)) %>% transmute(`HomeGoal:AwayGoal`= paste(high,low,sep=":")) %>%  count(`HomeGoal:AwayGoal`) %>% arrange(desc(`HomeGoal:AwayGoal`)) %>% head(5)
counts=Champions %>% mutate(low=pmin(HomeGoal, AwayGoal), high= pmax(HomeGoal, AwayGoal)) %>% transmute(`HomeGoal:AwayGoal`= paste(high,low,sep=":")) %>%  count(`HomeGoal:AwayGoal`) %>% arrange(desc(`n`)) %>% head(5)
View(counts)
Champions <- read.csv("C:/Users/hans/OneDrive/Documents/Data_Science/NYCDSA/Week_2/HW_5-Dplyr/Dplyr_Homework/Champions.csv")
library(tidyr)
counts=Champions %>% mutate(low=pmin(HomeGoal, AwayGoal), high= pmax(HomeGoal, AwayGoal)) %>% transmute(`HomeGoal:AwayGoal`= paste(high,low,sep=":")) %>%  count(`HomeGoal:AwayGoal`) %>% arrange(desc(`n`)) %>% head(5)
View(counts)
shiny::runApp('Week_2/shinyTutorial/flights_final')
runApp('Week_2/shinyTutorial/flights_final')
runApp('Week_2/shinyTutorial/flights')
flights <- fread(file = "./flights14.csv")
library(data.table)
flights <- fread(file = "./flights14.csv")
flights <- fread(file = "flights14.csv")
install.packages("data.table")
install.packages("data.table")
shiny::runApp('Week_2/shinyTutorial/flights')
library(data.table)
library(shiny)
library(data.table)
install.packages("data.table", dependencies=TRUE)
runApp('Week_2/shinyTutorial/flights')
runApp('Week_2/shinyTutorial/flights')
?fread
runApp('Week_2/shinyTutorial/flights')
runApp('Week_2/shinyTutorial/flights_final')
runApp('Week_2/shinyTutorial/flights')
runApp('Week_2/shinyTutorial/flights_final')
runApp('Week_2/shinyTutorial/flights_final')
runApp('Week_2/shinyTutorial/flights_final')
?fread
library(installr)
load(installr)
updateR()
shiny::runApp('Week_2/shinyTutorial/flights_final')
library(xts)
library(dygraphs)
library(plyr)
library(dplyr)
SF_rest= read.csv("Restaurant_Scores.csv",sep=',')
#rename columns
SF_rest= SF_rest%>%select(rest_id=business_id,
name=business_name,
address=business_address,
postcode= business_postal_code,
lat=business_latitude,
long=business_longitude,
ins_id= inspection_id,
fulldate=inspection_date,
score= inspection_score,
descr= violation_description,
risk_cat= risk_category)
#remove rows with missing score values & position(lat & long) values
SF_rest=SF_rest %>% filter(is.na(lat)!=TRUE)
SF_rest=SF_rest %>% filter(is.na(score)!=TRUE)
#change date to date object and extract day, month, year into each seperate column
SF_rest$fulldate=as.Date(SF_rest$fulldate, format = "%m/%d/%Y")
SF_rest$mmyydate=format(SF_rest$fulldate, "%Y-%m")
SF_rest$day= format(SF_rest$fulldate, "%d")
SF_rest$month= format(SF_rest$fulldate, "%m")
SF_rest$year= format(SF_rest$fulldate, "%Y")
#rename risk factor
SF_rest$risk_cat= gsub("^$","No Risk", SF_rest$risk_cat)
#clean post code factor
SF_rest= SF_rest %>% filter (!(postcode %in% c("00000","Ca","CA","","941"))) %>% droplevels()
SF_rest$postcode=gsub(".*2019.*", "94110", SF_rest$postcode)
#add a none feature for the day date
unique_days=unique(sort(SF_rest[,"day"], decreasing=FALSE))
unique_days=append(unique_days,"None")
#add NA for violation description of No risks category level
levels(SF_rest$descr)[levels(SF_rest$descr)==""] = "NA"
setwd("C:/Users/hans/OneDrive/Documents/Data_Science/NYCDSA/Project1-ShinyApp/SFrestaurantscores")
library(xts)
library(dygraphs)
library(plyr)
library(dplyr)
SF_rest= read.csv("Restaurant_Scores.csv",sep=',')
#rename columns
SF_rest= SF_rest%>%select(rest_id=business_id,
name=business_name,
address=business_address,
postcode= business_postal_code,
lat=business_latitude,
long=business_longitude,
ins_id= inspection_id,
fulldate=inspection_date,
score= inspection_score,
descr= violation_description,
risk_cat= risk_category)
#remove rows with missing score values & position(lat & long) values
SF_rest=SF_rest %>% filter(is.na(lat)!=TRUE)
SF_rest=SF_rest %>% filter(is.na(score)!=TRUE)
#change date to date object and extract day, month, year into each seperate column
SF_rest$fulldate=as.Date(SF_rest$fulldate, format = "%m/%d/%Y")
SF_rest$mmyydate=format(SF_rest$fulldate, "%Y-%m")
SF_rest$day= format(SF_rest$fulldate, "%d")
SF_rest$month= format(SF_rest$fulldate, "%m")
SF_rest$year= format(SF_rest$fulldate, "%Y")
#rename risk factor
SF_rest$risk_cat= gsub("^$","No Risk", SF_rest$risk_cat)
#clean post code factor
SF_rest= SF_rest %>% filter (!(postcode %in% c("00000","Ca","CA","","941"))) %>% droplevels()
SF_rest$postcode=gsub(".*2019.*", "94110", SF_rest$postcode)
#add a none feature for the day date
unique_days=unique(sort(SF_rest[,"day"], decreasing=FALSE))
unique_days=append(unique_days,"None")
#add NA for violation description of No risks category level
levels(SF_rest$descr)[levels(SF_rest$descr)==""] = "NA"
total_postcode= nr_postcode %>% inner_join(lr_postcode, by='postcode')
hr_postcode=SF_rest %>%
filter(risk_cat=="High Risk")%>%
group_by(postcode) %>%
mutate(postcode_count=n()) %>%
distinct(postcode,risk_cat, postcode_count)%>%
arrange(desc(postcode_count))%>%
head(10)
lr_postcode=SF_rest %>%
filter(risk_cat=="Low Risk")%>%
group_by(postcode) %>%
mutate(postcode_count=n()) %>%
distinct(postcode,risk_cat, postcode_count)%>%
arrange(desc(postcode_count))%>%
head(10)
mr_postcode=SF_rest %>%
filter(risk_cat=="Moderate Risk")%>%
group_by(postcode) %>%
mutate(postcode_count=n()) %>%
distinct(postcode,risk_cat, postcode_count)%>%
arrange(desc(postcode_count))%>%
head(10)
nr_postcode=SF_rest %>%
filter(risk_cat=="No Risk")%>%
group_by(postcode) %>%
mutate(postcode_count=n()) %>%
distinct(postcode,risk_cat, postcode_count)%>%
arrange(desc(postcode_count))%>%
head(10)
(lr_postcode, by='postcode')
?inner_join
total_postcode= nr_postcode %>% inner_join(lr_postcode, by='postcode')
View(total_postcode)
hr_postcode=SF_rest %>%
filter(risk_cat=="High Risk")%>%
group_by(postcode) %>%
mutate(postcode_count=n()) %>%
distinct(postcode,risk_cat, postcode_count)%>%
arrange(desc(postcode_count))%>%
head(20)
lr_postcode=SF_rest %>%
filter(risk_cat=="Low Risk")%>%
group_by(postcode) %>%
mutate(postcode_count=n()) %>%
distinct(postcode,risk_cat, postcode_count)%>%
arrange(desc(postcode_count))%>%
head(20)
mr_postcode=SF_rest %>%
filter(risk_cat=="Moderate Risk")%>%
group_by(postcode) %>%
mutate(postcode_count=n()) %>%
distinct(postcode,risk_cat, postcode_count)%>%
arrange(desc(postcode_count))%>%
head(20)
nr_postcode=SF_rest %>%
filter(risk_cat=="No Risk")%>%
group_by(postcode) %>%
mutate(postcode_count=n()) %>%
distinct(postcode,risk_cat, postcode_count)%>%
arrange(desc(postcode_count))%>%
head(20)
total_postcode= nr_postcode %>% inner_join(lr_postcode, by='postcode')
View(total_postcode)
total_postcode= total_postcode %>% inner_join(mr_postcode, by='postcode')
View(total_postcode)
total_postcode= total_postcode %>% inner_join(hr_postcode, by= 'postcode')
View(total_postcode)
?spread
total_postcode = total_postcode %>% gather("risk_cat","count",2:9)
library(tidyr)
total_postcode = total_postcode %>% gather("risk_cat","count",2:9)
View(total_postcode)
total_postcode= nr_postcode %>% inner_join(lr_postcode, by='postcode')
total_postcode= total_postcode %>% inner_join(mr_postcode, by='postcode')
total_postcode= total_postcode %>% inner_join(hr_postcode, by= 'postcode')
View(SF_rest)
total_postcode= rbind(nr_postcode,lr_postcode,mr_postcode,hr_postcode)
View(total_postcode)
total_postcode=total_postcode %>% distinct(postcode)
View(total_postcode)
total_postcode= rbind(nr_postcode,lr_postcode,mr_postcode,hr_postcode)
View(total_postcode)
total_postcode%>%
ggplot(aes(x=postcode, y=postcode_count)) +
geom_bar(aes(color= risk_cat))
library(ggplot2)
total_postcode%>%
ggplot(aes(x=postcode, y=postcode_count)) +
geom_bar(aes(color= risk_cat))
total_postcode%>%
ggplot(aes(x=postcode, y=postcode_count)) +
geom_bar(aes(color= risk_cat), stat='identity')
total_postcode%>%
ggplot(aes(x=postcode, y=postcode_count)) +
geom_bar(aes(color= risk_cat), stat='identity', position='dodge')
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library(plotly)
runApp()
runApp()
runApp()
runApp()
